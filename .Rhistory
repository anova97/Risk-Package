Risk<-function(x, ok){
# Args: x - macierz danych z kolumną stopyDzienneProste zawierającą stopy zwrotu
# typ - rodzaj obliczonego ryzyka VaR lub ES
# Result: macierz wejściowa z dodatkową kolumną z obliczoną wartością VaR
# Sprawdzanie poprawności argumentów
stopifnot(is.numeric(x$stopyDzienneProste))
stopifnot(is.numeric(ok))
stopifnot(ok<nrow(x))
stopifnot(ok>1)
# Wyznaczanie wartości i zapisanie wyniku do listy
varData<-NULL
ESData<-NULL
for(i in 1:(nrow(x)-ok-1))
{
okno<-x$stopyDzienneProste[i:(i+ok-1)]
var<-quantile(okno,0.01)
varData<-c(varData,var)
ES<-mean(okno[which(okno<var)])
ESData<-c(ESData,ES)
}
wynik<-x[1:length(varData),]
wynik$VAR<-varData
wynik$ES<-ESData
#colnames(wynik)[1]<-"data_pocz"
#wynik$data_kon<-x$data[-c(1:499)]
#wynik<-wynik[c(1,6,2,3,4,5)]
#return(wynik)
# Definiowanie klasy
class(wynik)<-append(class(wynik),'Risk')
return(wynik)
}
# okreslam metode podstawowa
Risk.default <- function(x, ok)
{    # Args: x - macierz danych z kolumną stopyDzienneProste zawierającą stopy zwrotu
# typ - rodzaj obliczonego ryzyka VaR lub ES
# Result: macierz wejściowa z dodatkową kolumną z obliczoną wartością VaR
# Sprawdzanie poprawności argumentów
stopifnot(is.numeric(x$stopyDzienneProste))
stopifnot(is.numeric(ok))
stopifnot(ok<nrow(x))
stopifnot(ok>1)
# Wyznaczanie wartości i zapisanie wyniku do listy
varData<-NULL
ESData<-NULL
for(i in 1:(nrow(x)-ok-1))
{
okno<-x$stopyDzienneProste[i:(i+ok-1)]
var<-quantile(okno,0.01)
varData<-c(varData,var)
ES<-mean(okno[which(okno<var)])
ESData<-c(ESData,ES)
}
wynik<-x[1:length(varData),]
wynik$VAR<-varData
wynik$ES<-ESData
#colnames(wynik)[1]<-"data_pocz"
#wynik$data_kon<-x$data[-c(1:499)]
#wynik<-wynik[c(1,6,2,3,4,5)]
#return(wynik)
# Definiowanie klasy
class(wynik)<-append(class(wynik),'Risk')
return(wynik)
}
# definiuję metodę print dla budowanej klasy
print.Risk <- function(x, ...)
{ # Wypisuje dwie miary ryzyka
wynik<-Risk(x)
cat("VaR:\n")
print(wynik$VAR)
cat("\nES:\n")
print(wynik$ES)
}
plot.Risk<-function(x, ok){
# Rysowanie wykresu dla VaR i ES
# Args: x - elemnt klasy Risk
# Result: Wykres VaR i ES
#przygotowanie nowego dataframe do wykresu
wynik<-Risk(x)
n<-nrow(wynik)
VarES<-c(rep("VAR",n), rep("ES",n))
wynik[,1]<-ymd(wynik[,1])
daneVarES<-data.frame("wartosc"=c(wynik$VAR, wynik$ES), "rodzaj"= VarES,  "data_poczatku_okna"=rep(wynik[,1],2))
wykres<-ggplot(daneVarES, aes(y=wartosc, x=daneVarES[,3], col=rodzaj))+geom_line()+
ggtitle("Wykres VaR i ES dla metody historycznej")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x = "Data poczatku okna", y = "wartosc")+theme_linedraw()
return(wykres)
}
plot.Risk(stopyEUR, ok=500)
Risk(stopyEUR, ok=500)
Risk(stopyEUR, ok=10)
print.Risk(stopyEUR, ok=10)
# definiuję metodę print dla budowanej klasy
print.Risk <- function(x, ok)
{ # Wypisuje dwie miary ryzyka
wynik<-Risk(x)
cat("VaR:\n")
print(wynik$VAR)
cat("\nES:\n")
print(wynik$ES)
}
plot.Risk<-function(x, ok){
# Rysowanie wykresu dla VaR i ES
# Args: x - elemnt klasy Risk
# Result: Wykres VaR i ES
#przygotowanie nowego dataframe do wykresu
wynik<-Risk(x)
n<-nrow(wynik)
VarES<-c(rep("VAR",n), rep("ES",n))
wynik[,1]<-ymd(wynik[,1])
daneVarES<-data.frame("wartosc"=c(wynik$VAR, wynik$ES), "rodzaj"= VarES,  "data_poczatku_okna"=rep(wynik[,1],2))
wykres<-ggplot(daneVarES, aes(y=wartosc, x=daneVarES[,3], col=rodzaj))+geom_line()+
ggtitle("Wykres VaR i ES dla metody historycznej")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x = "Data poczatku okna", y = "wartosc")+theme_linedraw()
return(wykres)
}
Risk(stopyEUR, ok=500)
print.Risk(stopyEUR, ok=10)
Risk <- function(x, ok) UseMethod("Risk")
Risk<-function(x, ok){
# Args: x - macierz danych z kolumną stopyDzienneProste zawierającą stopy zwrotu
# typ - rodzaj obliczonego ryzyka VaR lub ES
# Result: macierz wejściowa z dodatkową kolumną z obliczoną wartością VaR
# Sprawdzanie poprawności argumentów
stopifnot(is.numeric(x$stopyDzienneProste))
stopifnot(is.numeric(ok))
stopifnot(ok<nrow(x))
stopifnot(ok>1)
# Wyznaczanie wartości i zapisanie wyniku do listy
varData<-NULL
ESData<-NULL
for(i in 1:(nrow(x)-ok-1))
{
okno<-x$stopyDzienneProste[i:(i+ok-1)]
var<-quantile(okno,0.01)
varData<-c(varData,var)
ES<-mean(okno[which(okno<var)])
ESData<-c(ESData,ES)
}
wynik<-x[1:length(varData),]
wynik$VAR<-varData
wynik$ES<-ESData
#colnames(wynik)[1]<-"data_pocz"
#wynik$data_kon<-x$data[-c(1:499)]
#wynik<-wynik[c(1,6,2,3,4,5)]
#return(wynik)
# Definiowanie klasy
class(wynik)<-append(class(wynik),'Risk')
return(wynik)
}
waluty <- read.csv("~/Desktop/Projekt/waluty_2012_2018.csv", sep=";")
#dataframe gdzie zapisywane beda stopy dzienne proste
stopyEUR<-data.frame("data"=waluty$data, "kurs"=waluty$X1EUR, "stopyDzienneProste"=0)
stopyNZD<-data.frame("data"=waluty$data, "kurs"=waluty$X1NZD, "stopyDzienneProste"=0)
stopySGD<-data.frame("data"=waluty$data, "kurs"=waluty$X1SGD, "stopyDzienneProste"=0)
for (i in 2:nrow(waluty))
{
stopyEUR$stopyDzienneProste[i]<-((waluty$X1EUR[i]-waluty$X1EUR[(i-1)])/waluty$X1EUR[(i-1)])
stopyNZD$stopyDzienneProste[i]<-((waluty$X1NZD[i]-waluty$X1NZD[(i-1)])/waluty$X1NZD[(i-1)])
stopySGD$stopyDzienneProste[i]<-((waluty$X1SGD[i]-waluty$X1SGD[(i-1)])/waluty$X1SGD[(i-1)])
}
stopyEUR<-stopyEUR[2:nrow(stopyEUR), c(1,2,3)]
stopyNZD<-stopyNZD[2:nrow(stopyNZD), c(1,2,3)]
stopySGD<-stopySGD[2:nrow(stopySGD), c(1,2,3)]
library(lubridate)
library(ggplot2)
Risk <- function(x, ok) UseMethod("Risk")
Risk<-function(x, ok){
# Args: x - macierz danych z kolumną stopyDzienneProste zawierającą stopy zwrotu
# typ - rodzaj obliczonego ryzyka VaR lub ES
# Result: macierz wejściowa z dodatkową kolumną z obliczoną wartością VaR
# Sprawdzanie poprawności argumentów
stopifnot(is.numeric(x$stopyDzienneProste))
stopifnot(is.numeric(ok))
stopifnot(ok<nrow(x))
stopifnot(ok>1)
# Wyznaczanie wartości i zapisanie wyniku do listy
varData<-NULL
ESData<-NULL
for(i in 1:(nrow(x)-ok-1))
{
okno<-x$stopyDzienneProste[i:(i+ok-1)]
var<-quantile(okno,0.01)
varData<-c(varData,var)
ES<-mean(okno[which(okno<var)])
ESData<-c(ESData,ES)
}
wynik<-x[1:length(varData),]
wynik$VAR<-varData
wynik$ES<-ESData
#colnames(wynik)[1]<-"data_pocz"
#wynik$data_kon<-x$data[-c(1:499)]
#wynik<-wynik[c(1,6,2,3,4,5)]
#return(wynik)
# Definiowanie klasy
class(wynik)<-append(class(wynik),'Risk')
return(wynik)
}
Risk(stopyEUR)
Risk(stopyEUR, ok=500)
Risk(stopyEUR, ok=200)
Risk(stopyEUR, ok=100)
# okreslam metode podstawowa
Risk.default <- function(x, ok)
{    # Args: x - macierz danych z kolumną stopyDzienneProste zawierającą stopy zwrotu
# typ - rodzaj obliczonego ryzyka VaR lub ES
# Result: macierz wejściowa z dodatkową kolumną z obliczoną wartością VaR
# Sprawdzanie poprawności argumentów
stopifnot(is.numeric(x$stopyDzienneProste))
stopifnot(is.numeric(ok))
stopifnot(ok<nrow(x))
stopifnot(ok>1)
# Wyznaczanie wartości i zapisanie wyniku do listy
varData<-NULL
ESData<-NULL
for(i in 1:(nrow(x)-ok-1))
{
okno<-x$stopyDzienneProste[i:(i+ok-1)]
var<-quantile(okno,0.01)
varData<-c(varData,var)
ES<-mean(okno[which(okno<var)])
ESData<-c(ESData,ES)
}
wynik<-x[1:length(varData),]
wynik$VAR<-varData
wynik$ES<-ESData
#colnames(wynik)[1]<-"data_pocz"
#wynik$data_kon<-x$data[-c(1:499)]
#wynik<-wynik[c(1,6,2,3,4,5)]
#return(wynik)
# Definiowanie klasy
class(wynik)<-append(class(wynik),'Risk')
return(wynik)
}
Risk(stopyEUR, ok=100)
# definiuję metodę print dla budowanej klasy
print.Risk <- function(x, ok)
{ # Wypisuje dwie miary ryzyka
wynik<-Risk(x, ok)
cat("VaR:\n")
print(wynik$VAR)
cat("\nES:\n")
print(wynik$ES)
}
print.Risk(stopyEUR, ok=100)
plot.Risk<-function(x, ok){
# Rysowanie wykresu dla VaR i ES
# Args: x - elemnt klasy Risk
# Result: Wykres VaR i ES
#przygotowanie nowego dataframe do wykresu
wynik<-Risk(x, ok)
n<-nrow(wynik)
VarES<-c(rep("VAR",n), rep("ES",n))
wynik[,1]<-ymd(wynik[,1])
daneVarES<-data.frame("wartosc"=c(wynik$VAR, wynik$ES), "rodzaj"= VarES,  "data_poczatku_okna"=rep(wynik[,1],2))
wykres<-ggplot(daneVarES, aes(y=wartosc, x=daneVarES[,3], col=rodzaj))+geom_line()+
ggtitle("Wykres VaR i ES dla metody historycznej")+
theme(plot.title = element_text(hjust = 0.5))+
labs(x = "Data poczatku okna", y = "wartosc")+theme_linedraw()
return(wykres)
}
plot.Risk(stopyEUR, 10000)
plot.Risk(stopyEUR, 10)
plot.Risk(stopyEUR, 100)
plot.Risk(stopyEUR, 1000)
plot.Risk(stopyEUR, 200)
library(Risk)
waluty <- read.csv("~/Desktop/Projekt/waluty_2012_2018.csv", sep=";")
#dataframe gdzie zapisywane beda stopy dzienne proste
stopyEUR<-data.frame("data"=waluty$data, "kurs"=waluty$X1EUR, "stopyDzienneProste"=0)
stopyNZD<-data.frame("data"=waluty$data, "kurs"=waluty$X1NZD, "stopyDzienneProste"=0)
stopySGD<-data.frame("data"=waluty$data, "kurs"=waluty$X1SGD, "stopyDzienneProste"=0)
for (i in 2:nrow(waluty))
{
stopyEUR$stopyDzienneProste[i]<-((waluty$X1EUR[i]-waluty$X1EUR[(i-1)])/waluty$X1EUR[(i-1)])
stopyNZD$stopyDzienneProste[i]<-((waluty$X1NZD[i]-waluty$X1NZD[(i-1)])/waluty$X1NZD[(i-1)])
stopySGD$stopyDzienneProste[i]<-((waluty$X1SGD[i]-waluty$X1SGD[(i-1)])/waluty$X1SGD[(i-1)])
}
stopyEUR<-stopyEUR[2:nrow(stopyEUR), c(1,2,3)]
stopyNZD<-stopyNZD[2:nrow(stopyNZD), c(1,2,3)]
stopySGD<-stopySGD[2:nrow(stopySGD), c(1,2,3)]
print.Risk(stopyEUR, ok=100)
plot.Risk(stopyEUR, 200)
library(Risk)
waluty <- read.csv("~/Desktop/Projekt/waluty_2012_2018.csv", sep=";")
#dataframe gdzie zapisywane beda stopy dzienne proste
stopyEUR<-data.frame("data"=waluty$data, "kurs"=waluty$X1EUR, "stopyDzienneProste"=0)
stopyNZD<-data.frame("data"=waluty$data, "kurs"=waluty$X1NZD, "stopyDzienneProste"=0)
stopySGD<-data.frame("data"=waluty$data, "kurs"=waluty$X1SGD, "stopyDzienneProste"=0)
for (i in 2:nrow(waluty))
{
stopyEUR$stopyDzienneProste[i]<-((waluty$X1EUR[i]-waluty$X1EUR[(i-1)])/waluty$X1EUR[(i-1)])
stopyNZD$stopyDzienneProste[i]<-((waluty$X1NZD[i]-waluty$X1NZD[(i-1)])/waluty$X1NZD[(i-1)])
stopySGD$stopyDzienneProste[i]<-((waluty$X1SGD[i]-waluty$X1SGD[(i-1)])/waluty$X1SGD[(i-1)])
}
stopyEUR<-stopyEUR[2:nrow(stopyEUR), c(1,2,3)]
stopyNZD<-stopyNZD[2:nrow(stopyNZD), c(1,2,3)]
stopySGD<-stopySGD[2:nrow(stopySGD), c(1,2,3)]
print.Risk(stopyEUR, ok=100)
plot.Risk(stopyEUR, 200)
# definiuję metodę print dla budowanej klasy
print.Risk <- function(x, ok, typ)
{ # Wypisuje dwie miary ryzyka
wynik<-Risk(x, ok)
if(typ=="VaR")
{
cat("VaR:\n")
print(wynik$VAR)
}
if(typ=="ES")
{
cat("\nES:\n")
print(wynik$ES)
}
}
library(Risk)
waluty <- read.csv("~/Desktop/Projekt/waluty_2012_2018.csv", sep=";")
#dataframe gdzie zapisywane beda stopy dzienne proste
stopyEUR<-data.frame("data"=waluty$data, "kurs"=waluty$X1EUR, "stopyDzienneProste"=0)
stopyNZD<-data.frame("data"=waluty$data, "kurs"=waluty$X1NZD, "stopyDzienneProste"=0)
stopySGD<-data.frame("data"=waluty$data, "kurs"=waluty$X1SGD, "stopyDzienneProste"=0)
for (i in 2:nrow(waluty))
{
stopyEUR$stopyDzienneProste[i]<-((waluty$X1EUR[i]-waluty$X1EUR[(i-1)])/waluty$X1EUR[(i-1)])
stopyNZD$stopyDzienneProste[i]<-((waluty$X1NZD[i]-waluty$X1NZD[(i-1)])/waluty$X1NZD[(i-1)])
stopySGD$stopyDzienneProste[i]<-((waluty$X1SGD[i]-waluty$X1SGD[(i-1)])/waluty$X1SGD[(i-1)])
}
stopyEUR<-stopyEUR[2:nrow(stopyEUR), c(1,2,3)]
stopyNZD<-stopyNZD[2:nrow(stopyNZD), c(1,2,3)]
stopySGD<-stopySGD[2:nrow(stopySGD), c(1,2,3)]
print.Risk(stopyEUR, ok=100)
print.Risk(stopyEUR, ok=100, typ = "VaR")
library(Risk)
waluty <- read.csv("~/Desktop/Projekt/waluty_2012_2018.csv", sep=";")
#dataframe gdzie zapisywane beda stopy dzienne proste
stopyEUR<-data.frame("data"=waluty$data, "kurs"=waluty$X1EUR, "stopyDzienneProste"=0)
stopyNZD<-data.frame("data"=waluty$data, "kurs"=waluty$X1NZD, "stopyDzienneProste"=0)
stopySGD<-data.frame("data"=waluty$data, "kurs"=waluty$X1SGD, "stopyDzienneProste"=0)
for (i in 2:nrow(waluty))
{
stopyEUR$stopyDzienneProste[i]<-((waluty$X1EUR[i]-waluty$X1EUR[(i-1)])/waluty$X1EUR[(i-1)])
stopyNZD$stopyDzienneProste[i]<-((waluty$X1NZD[i]-waluty$X1NZD[(i-1)])/waluty$X1NZD[(i-1)])
stopySGD$stopyDzienneProste[i]<-((waluty$X1SGD[i]-waluty$X1SGD[(i-1)])/waluty$X1SGD[(i-1)])
}
stopyEUR<-stopyEUR[2:nrow(stopyEUR), c(1,2,3)]
stopyNZD<-stopyNZD[2:nrow(stopyNZD), c(1,2,3)]
stopySGD<-stopySGD[2:nrow(stopySGD), c(1,2,3)]
print.Risk(stopyEUR, ok=100, typ = "VaR")
stopyEUR
class(stopyNZD)
class(stopyEUR$data)
waluty <- read.csv("~/Desktop/Projekt/waluty_2012_2018.csv", sep=";")
#dataframe gdzie zapisywane beda stopy dzienne proste
stopyEUR<-data.frame("data"=waluty$data, "kurs"=waluty$X1EUR, "stopyDzienneProste"=0)
stopyNZD<-data.frame("data"=waluty$data, "kurs"=waluty$X1NZD, "stopyDzienneProste"=0)
stopySGD<-data.frame("data"=waluty$data, "kurs"=waluty$X1SGD, "stopyDzienneProste"=0)
for (i in 2:nrow(waluty))
{
stopyEUR$stopyDzienneProste[i]<-((waluty$X1EUR[i]-waluty$X1EUR[(i-1)])/waluty$X1EUR[(i-1)])
stopyNZD$stopyDzienneProste[i]<-((waluty$X1NZD[i]-waluty$X1NZD[(i-1)])/waluty$X1NZD[(i-1)])
stopySGD$stopyDzienneProste[i]<-((waluty$X1SGD[i]-waluty$X1SGD[(i-1)])/waluty$X1SGD[(i-1)])
}
stopyEUR<-stopyEUR[2:nrow(stopyEUR), c(1,2,3)]
stopyNZD<-stopyNZD[2:nrow(stopyNZD), c(1,2,3)]
stopySGD<-stopySGD[2:nrow(stopySGD), c(1,2,3)]
print.Risk(stopyEUR, ok=100, typ = "VaR")
plot.Risk(stopyEUR, 200)
plot.Risk(stopyEUR, 2000)
plot.Risk(stopyEUR, 600)
plot.Risk(stopyEUR, 400)
plot.Risk(stopyEUR, 300)
library(Risk)
library(Risk)
library(Risk)
detach("package:Risk", unload = TRUE)
library(Risk)
library(Risk)
library(Risk)
??Risk
Risk::
Risk::Risk()
library(Risk)
Risk(stopyEUR)
Risk(stopyEUR, 200)
plot.Risk(stopyNZD, 200)
library(Risk)
library(Risk)
library(Risk)
library(Risk)
library(Risk)
library(Risk)
library(Risk)
plot.Risk()
stopyNZD <- read_csv("~/Downloads/stopyNZD.csv",
col_types = cols(X1 = col_skip(), data = col_character()))
library(readr)
stopyNZD <- read_csv("~/Downloads/stopyNZD.csv",
col_types = cols(X1 = col_skip(), data = col_character()))
wynik<-Risk(stopyNZD, 300)
plot.Risk(stopyNZD, 400)
print.Risk(stopyEUR, 400, "VaR")
print.Risk(stopyNZD, 400, "VaR")
plot.Risk(stopyNZD, 400)
View(stopyNZD)
waluty <- read.csv("waluty_2012_2018.csv", sep=";")
library(readr)
waluty_2012_2018 <- read_delim("~/Desktop/Risk/waluty_2012_2018.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(waluty_2012_2018)
waluty_2012_2018 <- read_delim("~/Desktop/Risk/waluty_2012_2018.csv",
";", escape_double = FALSE, trim_ws = TRUE)
#dataframe gdzie zapisywane beda stopy dzienne proste
stopyEUR<-data.frame("data"=waluty$data, "kurs"=waluty$X1EUR, "stopyDzienneProste"=0)
waluty <- read_delim("~/Desktop/Risk/waluty_2012_2018.csv",
";", escape_double = FALSE, trim_ws = TRUE)
#dataframe gdzie zapisywane beda stopy dzienne proste
stopyEUR<-data.frame("data"=waluty$data, "kurs"=waluty$X1EUR, "stopyDzienneProste"=0)
View(waluty)
#dataframe gdzie zapisywane beda stopy dzienne proste
stopyEUR<-data.frame("data"=waluty$data, "kurs"=waluty$X1EUR, "stopyDzienneProste"=0)
#dataframe gdzie zapisywane beda stopy dzienne proste
stopyEUR<-data.frame("data"=waluty$data, "kurs"=waluty$X1EUR, "stopyDzienneProste"=0)
waluty <- read_delim("~/Desktop/Risk/waluty_2012_2018.csv",
";", escape_double = FALSE, trim_ws = TRUE)
library(readr)
waluty <- read_delim("~/Desktop/Risk/waluty_2012_2018.csv",
";", escape_double = FALSE, trim_ws = TRUE)
#dataframe gdzie zapisywane beda stopy dzienne proste
stopyEUR<-data.frame("data"=waluty$data, "kurs"=waluty$X1EUR, "stopyDzienneProste"=0)
waluty
waluty <- read_delim("~/Desktop/Risk/waluty_2012_2018.csv", ";", escape_double = FALSE, trim_ws = TRUE)
waluty <- read_csv("~/Desktop/Risk/waluty_2012_2018.csv",  sep=";")
waluty <- read.csv("~/Desktop/Risk/waluty_2012_2018.csv",  sep=";")
#dataframe gdzie zapisywane beda stopy dzienne proste
stopyEUR<-data.frame("data"=waluty$data, "kurs"=waluty$X1EUR, "stopyDzienneProste"=0)
stopyNZD<-data.frame("data"=waluty$data, "kurs"=waluty$X1NZD, "stopyDzienneProste"=0)
stopySGD<-data.frame("data"=waluty$data, "kurs"=waluty$X1SGD, "stopyDzienneProste"=0)
for (i in 2:nrow(waluty))
{
stopyEUR$stopyDzienneProste[i]<-((waluty$X1EUR[i]-waluty$X1EUR[(i-1)])/waluty$X1EUR[(i-1)])
stopyNZD$stopyDzienneProste[i]<-((waluty$X1NZD[i]-waluty$X1NZD[(i-1)])/waluty$X1NZD[(i-1)])
stopySGD$stopyDzienneProste[i]<-((waluty$X1SGD[i]-waluty$X1SGD[(i-1)])/waluty$X1SGD[(i-1)])
}
str(stopyEUR)
stopyEUR<-stopyEUR[2:nrow(stopyEUR), c(1,2,3)]
stopyNZD<-stopyNZD[2:nrow(stopyNZD), c(1,2,3)]
stopySGD<-stopySGD[2:nrow(stopySGD), c(1,2,3)]
library(Risk)
Risk(stop,200)
Risk(stopyEUR,200)
plot.Risk(stopyEUR,200)
write.csv(stopyEUR,'stopyEUR.csv')
stopyEUR <- read.csv("~/Desktop/Risk 2 2/stopyEUR.csv")
View(stopyEUR)
write.csv(stopyEUR,'stopyEUR.csv', col.names = TRUE)
library(readr)
stopyEUR <- read_csv("stopyEUR.csv", col_types = cols(X = col_skip(),
X1 = col_skip()))
View(stopyEUR)
plot.Risk(stopyEUR,200)
write_csv(stopyEUR,'stopyEUR.csv', col.names = TRUE)
write_csv(stopyEUR,'stopyEUR.csv')
stopyEUR <- read.csv("~/Desktop/Risk 2 2/stopyEUR.csv")
View(stopyEUR)
plot.Risk(stopyEUR,200)
write_csv(stopyNZD,'stopyNZD.csv')
stopyNZD <- read.csv("~/Desktop/Risk 2 2/stopyNZD.csv")
View(stopyNZD)
stopySGD<-data.frame("data"=waluty$data, "kurs"=waluty$X1SGD, "stopyDzienneProste"=0)
for (i in 2:nrow(waluty))
{
stopyEUR$stopyDzienneProste[i]<-((waluty$X1EUR[i]-waluty$X1EUR[(i-1)])/waluty$X1EUR[(i-1)])
stopyNZD$stopyDzienneProste[i]<-((waluty$X1NZD[i]-waluty$X1NZD[(i-1)])/waluty$X1NZD[(i-1)])
stopySGD$stopyDzienneProste[i]<-((waluty$X1SGD[i]-waluty$X1SGD[(i-1)])/waluty$X1SGD[(i-1)])
}
str(stopyEUR)
stopyEUR<-stopyEUR[2:nrow(stopyEUR), c(1,2,3)]
stopyNZD<-stopyNZD[2:nrow(stopyNZD), c(1,2,3)]
stopySGD<-stopySGD[2:nrow(stopySGD), c(1,2,3)]
stopySGD
write_csv(stopySGD,'stopySGD.csv')
plot.Risk(stopyEUR,200)
Risk(stopyEUR,200)
print.Risk(stopyEUR,200, "ES")
plot.Risk(stopyEUR,200)
library(Risk)
stopyNZD <- read.csv("~/Desktop/Risk 2 2/stopyNZD.csv")
stopyEUR <- read.csv("~/Desktop/Risk 2 2/stopyEUR.csv")
stopySGD <- read.csv("~/Desktop/Risk 2 2/stopySGD.csv")
Risk(stopyEUR,200)
print.Risk(stopyEUR,200, "ES")
plot.Risk(stopyEUR,200)
library(Risk)
Risk(x=stopyEuro, ok=500)
library(Risk)
Risk(x=stopyEuro, ok=500)
library(Risk)
Risk::Risk()
Risk()
library(Risk)
Risk::
??Risk
plot.Risk(x=stopyEuro, ok=500)
library(Risk)
Risk::Risk
library(Risk)
library(Risk)
??Risk
Risk
Risk:::Risk()
Risk:::Risk(x=stopyEuro, ok=500)
